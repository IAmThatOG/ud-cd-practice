version: 2.1
# Use a package of configuration called an orb.
# orbs:
# Choose either one of the orbs below
# welcome: circleci/welcome-orb@0.4.1
# aws-cli: circleci/aws-cli@2.0.3

executors:
  aws_cli_executor:
    docker:
      - image: amazon/aws-cli #image for creating infrastructure on AWS

  python_alpine_executor:
    docker:
      - image: python:3.7-alpine3.16 #image for installing ansible and configuring infrastructure

  alpine_executor:
    docker:
      - image: alpine:latest

commands:
  # Exercise - Rollback
  destroy_environment:
    description: Deletes Cloudformation stack
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
          when: on_fail
          command: |
            apk add --no-cache aws-cli
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define the jobs we want to run for this project
jobs:
  create_infrastructure:
    executor: aws_cli_executor
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file infrastructure/template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

  # Exercise: Config and Deployment
  configure_infrastructure:
    executor: python_alpine_executor
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["fd:cd:84:87:be:c3:48:6c:30:7e:31:23:bf:02:6f:1a"]
      - run:
          name: Install Ansible
          command: apk add --update ansible
      # - run: # only run this command for lower python-alpine image version
      #     name: Install SSH
      #     command: apk add --update --no-cache openssh
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml

  smoke_test:
    executor: alpine_executor
    steps:
      - run:
          name: Install curl for http calls
          command: apk add --update curl
      - run:
          name: Smoke Test
          command: |
            URL="https://blog.udacity123.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
